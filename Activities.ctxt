#BlueJ class context
comment0.target=Activities
comment0.text=\r\n\ Represents\ a\ single\ activity.\r\n\ \r\n\ Each\ activity\ has\ a\ name,\ a\ mode\ of\ transport,\ a\ distance\ covered,\r\n\ and\ a\ calorie\ burn\ rate\ per\ unit\ distance.\ Activities\ can\ be\ associated\r\n\ with\ multiple\ athletes.\r\n
comment1.params=activityName\ mode\ caloriesPerDistance\ distance
comment1.target=Activities(java.lang.String,\ TransportMode,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Activities.\r\n\ \r\n\ @param\ activityName\ \ \ \ \ \ \ \ \ the\ name\ of\ the\ activity\ ("Running")\r\n\ @param\ mode\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ mode\ of\ transport\ or\ activity\ (WALKING,\ RUNNING)\r\n\ @param\ caloriesPerDistance\ \ the\ number\ of\ calories\ burned\ per\ unit\ distance\r\n\ @param\ distance\ \ \ \ \ \ \ \ \ \ \ \ \ the\ total\ distance\ of\ the\ activity\ in\ kilometers\r\n
comment10.params=athlete
comment10.target=void\ listActivitiesByAthlete(Athletes)
comment10.text=\r\n\ List\ activities\ performed\ by\ a\ given\ athlete,\ showing\ units,\ total\ calories\ and\ their\ distance\r\n
comment11.params=athlete
comment11.target=int\ calculateDistanceByAthlete(Athletes)
comment11.text=\r\n\ Calculates\ the\ total\ distance\ covered\ by\ a\ specific\ athlete\ across\ all\ activities.\r\n\r\n\ @param\ athlete\ the\ athlete\ whose\ total\ distance\ is\ to\ be\ calculated\r\n\ @return\ the\ total\ distance\ (in\ kilometers)\ the\ athlete\ has\ participated\ in\r\n
comment12.params=
comment12.target=int\ calculateTotalDistanceAll()
comment12.text=\r\n\ Calculates\ the\ total\ distance\ covered\ across\ all\ recorded\ activities,\r\n\ regardless\ of\ which\ athletes\ participated.\r\n\r\n\ @return\ the\ total\ distance\ (in\ kilometers)\ of\ all\ activities\r\n
comment13.params=
comment13.target=java.util.List\ getAllActivities()
comment13.text=\r\n\ Returns\ the\ list\ of\ all\ recorded\ activity\ instances.\r\n\ \r\n\ This\ list\ includes\ every\ Activities\ object\ created\ and\ added\r\n\ to\ the\ system\ via\ the\ constructor.\r\n\r\n\ @return\ a\ list\ containing\ all\ activity\ objects\r\n
comment2.params=
comment2.target=int\ getCaloriesPerDistance()
comment2.text=\r\n\ Calculates\ total\ calories\ for\ this\ activity\ (calories\ per\ unit\ *\ distance)\r\n
comment3.params=athlete
comment3.target=void\ setAthlete(Athletes)
comment3.text=\r\n\ Associates\ an\ athlete\ with\ this\ activity\r\n
comment4.params=
comment4.target=void\ listActivities()
comment4.text=\r\n\ List\ all\ activity\ names\r\n
comment5.params=
comment5.target=void\ listActivitiesByTransportMode()
comment5.text=\r\n\ List\ activities\ grouped\ by\ transport\ mode\r\n
comment6.params=
comment6.target=void\ listActivitiesDetails()
comment6.text=\r\n\ Detailed\ listing\ of\ each\ activity\ by\ mode,\ including\ calories\ and\ athlete\ count\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Returns\ a\ string\ representation\ of\ the\ activity,\ including\ its\ name,\r\n\ transport\ mode,\ distance,\ and\ calories\ burned\ per\ kilometer.\r\n\r\n\ @return\ a\ formatted\ string\ describing\ the\ activity\r\n
comment8.params=athlete
comment8.target=int\ calculateCaloriesByAthlete(Athletes)
comment8.text=\r\n\ Sum\ of\ the\ calories\ for\ a\ specific\ athlete\ over\ all\ their\ activities\r\n
comment9.params=
comment9.target=int\ calculateTotalCaloriesAll()
comment9.text=\r\n\ Sum\ calories\ for\ all\ activities\ regardless\ of\ athlete\r\n
numComments=14
