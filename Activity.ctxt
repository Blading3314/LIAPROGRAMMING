#BlueJ class context
comment0.target=Activity
comment1.params=activityName\ mode\ caloriesPerDistance\ distance
comment1.target=Activity(java.lang.String,\ TransportMode,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ built-in\ (enum)\ transport\ mode.\r\n
comment10.params=
comment10.target=int\ calculateTotalCaloriesAll()
comment10.text=\r\n\ Calculates\ the\ total\ calories\ burned\ across\ all\ activities.\r\n\ @return\ total\ calories\ burned\r\n
comment11.params=athlete
comment11.target=void\ listActivitiesByAthlete(Athlete)
comment11.text=\r\n\ Lists\ all\ activities\ performed\ by\ a\ given\ athlete,\ showing\ units,\ total\ calories,\ and\ distance.\r\n\ Indicates\ if\ an\ activity\ is\ powered\ and\ the\ equipment\ used.\r\n\ @param\ athlete\ the\ athlete\ to\ check\r\n
comment12.params=athlete
comment12.target=int\ calculateDistanceByAthlete(Athlete)
comment12.text=\r\n\ Calculates\ the\ total\ distance\ for\ a\ given\ athlete\ across\ all\ their\ activities.\r\n\ @param\ athlete\ the\ athlete\ to\ check\r\n\ @return\ total\ distance\r\n
comment13.params=
comment13.target=int\ calculateTotalDistanceAll()
comment13.text=\r\n\ Calculates\ the\ total\ distance\ across\ all\ activities.\r\n\ @return\ total\ distance\r\n
comment14.params=
comment14.target=java.util.List\ getAllActivities()
comment14.text=\r\n\ Returns\ the\ global\ list\ of\ all\ activities.\r\n\ @return\ list\ of\ all\ activities\r\n
comment15.params=mode
comment15.target=boolean\ isCustomMode(java.lang.String)
comment15.text=\r\n\ Checks\ if\ a\ mode\ is\ a\ registered\ custom\ mode.\r\n\ @param\ mode\ the\ mode\ name\r\n\ @return\ true\ if\ custom,\ false\ otherwise\r\n
comment16.params=mode
comment16.target=void\ registerCustomMode(java.lang.String)
comment16.text=\r\n\ Registers\ a\ new\ custom\ mode.\r\n\ @param\ mode\ the\ mode\ name\r\n
comment17.params=
comment17.target=java.util.List\ getAllModes()
comment17.text=\r\n\ Returns\ a\ list\ of\ all\ mode\ names\ (enum\ and\ custom).\r\n\ @return\ list\ of\ all\ mode\ names\r\n
comment2.params=activityName\ customMode\ caloriesPerDistance\ distance
comment2.target=Activity(java.lang.String,\ java.lang.String,\ int,\ int)
comment2.text=\r\n\ Constructor\ for\ custom\ (user-defined)\ transport\ mode.\r\n
comment3.params=
comment3.target=int\ getCaloriesPerDistance()
comment3.text=\r\n\ Calculates\ and\ returns\ the\ total\ calories\ lost\ for\ this\ activity.\r\n\ @return\ total\ calories\ lost\ (caloriesPerDistance\ *\ distance)\r\n
comment4.params=athlete
comment4.target=void\ setAthlete(Athlete)
comment4.text=\r\n\ Associates\ an\ athlete\ with\ this\ activity.\r\n\ @param\ athlete\ the\ athlete\ to\ add\r\n
comment5.params=
comment5.target=void\ listActivities()
comment5.text=\r\n\ Lists\ the\ names\ of\ all\ activities.\r\n
comment6.params=
comment6.target=void\ listActivitiesByTransportMode()
comment6.text=\r\n\ Lists\ all\ activities\ grouped\ by\ transport\ mode\ (enum\ and\ custom).\r\n\ Shows\ if\ an\ activity\ is\ powered\ in\ parentheses.\r\n
comment7.params=
comment7.target=void\ listActivitiesDetails()
comment7.text=\r\n\ Shows\ detailed\ information\ for\ all\ activities,\ grouped\ by\ mode.\r\n\ Includes\ distance,\ calories,\ athlete\ count,\ and\ powered/equipment\ info.\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Returns\ a\ string\ representation\ of\ this\ activity,\ including\ mode,\ distance,\ and\ calories.\r\n
comment9.params=athlete
comment9.target=int\ calculateCaloriesByAthlete(Athlete)
comment9.text=\r\n\ Calculates\ the\ total\ calories\ burned\ by\ a\ specific\ athlete\ across\ all\ their\ activities.\r\n\ @param\ athlete\ the\ athlete\ to\ check\r\n\ @return\ total\ calories\ burned\r\n
numComments=18
